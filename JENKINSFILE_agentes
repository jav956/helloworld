pipeline {
  agent none
  stages {
    stage('Parallel') {
      parallel {
        stage('Unit & Coverage') {
          agent any
          steps {
            bat '''
              whoami
              hostname
              echo %WORKSPACE%

              REM Cambiar al venv
              call C:\\unir\\venv\\Scripts\\activate.bat
              @echo on
              
              set PYTHONPATH=%WORKSPACE%
              coverage run --branch --source=app --omit=app\\__init__.py,app\\api.py -m pytest --junitxml=result-unit.xml test\\unit
              coverage xml 
            '''
            junit 'result-unit.xml'
            catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
              cobertura coberturaReportFile: 'coverage.xml', onlyStable: false, lineCoverageTargets: '95, 85, 95', conditionalCoverageTargets: '90, 80, 90', failUnhealthy: true, failUnstable: false
            }
           
            deleteDir()
          }
        }
        stage('Rest') {
          agent any
          steps {
            bat '''
              whoami
              hostname
              echo %WORKSPACE%

              REM Cambiar al venv
              call C:\\unir\\venv\\Scripts\\activate.bat
              @echo on
              
              REM Iniciar los servidores flask y wiremock
              set FLASK_APP=app\\api.py
              set FLASK_ENV=development
              start flask run
              start java -jar C:\\unir\\wiremock-standalone-3.3.1.jar --port 9090 --root-dir test\\wiremock
              python wait_services.py 5000 9090
              if %errorlevel% == 1 exit 1

              set PYTHONPATH=%WORKSPACE%
              pytest --junitxml=result-service.xml test\\rest

              REM Se paran los procesos flask y wiremock
              for /f "tokens=5 delims= " %%p IN ('"netstat -ano | findstr 127.0.0.1:5000.*LISTENING"') do taskKill /f /pid %%p
              for /f "tokens=5 delims= " %%p IN ('"netstat -ano | findstr 0.0.0.0:9090.*LISTENING"') do taskKill /f /pid %%p
            '''
            junit 'result-service.xml'

            deleteDir()
          }
        }
        stage('Static') {
          agent any
          steps {
            bat '''
              whoami
              hostname
              echo %WORKSPACE%

              REM Cambiar al venv
              call C:\\unir\\venv\\Scripts\\activate.bat
              @echo on
              
              flake8 --format=pylint --exit-zero app > flake8.out
            '''
            recordIssues qualityGates: [[threshold: 8, type: 'TOTAL', unstable: true],[threshold: 10, type: 'TOTAL', unstable: false]], tools: [flake8(name: 'Flake8', pattern: 'flake8.out')]

            deleteDir()
          }
        }
        stage('Security') {
          agent any
          steps {
            bat '''
              whoami
              hostname
              echo %WORKSPACE%

              REM Cambiar al venv
              call C:\\unir\\venv\\Scripts\\activate.bat
              @echo on
                
              bandit -r -o bandit.out -f custom --msg-template "{abspath}:{line}: [{test_id}] {msg}" --exit-zero app
            '''
            recordIssues qualityGates: [[threshold: 2, type: 'TOTAL', unstable: true],[threshold: 4, type: 'TOTAL', unstable: false]], tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')]

            deleteDir()
          }
        }
      }
    }
    stage('Performance') {
      agent any
      steps {
        bat '''
          whoami
          hostname
          echo %WORKSPACE%

          REM Cambiar al venv
          call C:\\unir\\venv\\Scripts\\activate.bat
          @echo on
          
          REM Iniciar los servidores flask
          set FLASK_APP=app\\api.py
          set FLASK_ENV=development
          start flask run
          python wait_services.py 5000
          if %errorlevel% == 1 exit 1

          call C:\\unir\\jmeter\\bin\\jmeter -n -t test\\testplan.jmx  -f -l perf.jtl

          REM Se para el proceso flask
          for /f "tokens=5 delims= " %%p IN ('"netstat -ano | findstr 127.0.0.1:5000.*LISTENING"') do taskKill /f /pid %%p
        '''
        perfReport sourceDataFiles: 'perf.jtl'

        deleteDir()
      }
    }
  }
}